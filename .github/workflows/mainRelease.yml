name: "[main] Test, Build & Release"

on:
 push:
  branches:
   - "main"
 pull_request:
  types: ["opened", "edited", "reopened", "synchronize", "ready_for_review", "review_requested"]

jobs:
 # Binary Build & Test (depends on eslint)
 Sanity:
  name: Build & Test
  strategy:
   matrix:
    platform:
     - os-name: Linux-x86_64
       runs-on: ubuntu-latest
       target: x86_64-unknown-linux-musl

     - os-name: Windows-x86_64
       runs-on: windows-latest
       target: x86_64-pc-windows-msvc

     - os-name: macOS-x86_64
       runs-on: macOS-latest
       target: x86_64-apple-darwin

     - os-name: macOS-aarch64
       runs-on: macOS-latest
       target: aarch64-apple-darwin

  runs-on: ${{ matrix.platform.runs-on }}

  steps:
   - uses: actions/checkout@v4

   - name: Cache cargo & target directories
     uses: Swatinem/rust-cache@v2
     with:
      key: "v2"

   - name: Set "--features" flag value
     id: set-features-flag-value
     shell: bash
     run: |
      if [ -n "${{ matrix.platform.features }}" ]; then
          echo "features=${{ matrix.platform.features }}" >> "$GITHUB_OUTPUT"
      else 
          echo "features=default" >> "$GITHUB_OUTPUT"
      fi
      cat "$GITHUB_OUTPUT"

   - name: Run tests
     uses: houseabsolute/actions-rust-cross@v0
     with:
      command: "test"
      target: ${{ matrix.platform.target }}
      toolchain: ${{ matrix.toolchain }}
      args: "--locked --release  --features ${{ steps.set-features-flag-value.outputs.features }}"

   - name: Build binary
     uses: houseabsolute/actions-rust-cross@v0
     with:
      command: "build"
      target: ${{ matrix.platform.target }}
      toolchain: ${{ matrix.toolchain }}
      args: "--locked --release --features ${{ steps.set-features-flag-value.outputs.features }}"
      strip: true

   - name: Publish artifacts and release
     uses: houseabsolute/actions-rust-release@v0
     with:
      executable-name: neptunecli
      target: ${{ matrix.platform.target }}
